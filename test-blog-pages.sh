#!/bin/bash

echo "üß™ Test des pages blog pour v√©rifier la structure des composants..."

# Liste des pages blog √† tester
BLOG_PAGES=(
  "index"
  "guide-rgpd-2024"
  "comment-rediger-demande-suppression-rgpd"
  "protection-donnees-entreprises"
  "cookies-tracking"
  "donnees-sante-privacy"
  "tendances-rgpd-2024-nouvelles-reglementations"
  "supprimer-donnees-google"
  "droit-oubli-facebook"
)

# URL de base
BASE_URL="http://localhost:3005/blog"

# Compteurs
TOTAL_PAGES=${#BLOG_PAGES[@]}
SUCCESS_COUNT=0
ERROR_COUNT=0

echo "üìä Test de $TOTAL_PAGES pages blog..."
echo ""

for page in "${BLOG_PAGES[@]}"; do
  echo "üîç Test de /blog/$page..."
  
  # Test de la page
  response=$(curl -s -w "\n%{http_code}" "$BASE_URL/$page")
  
  # Extraire le code de statut HTTP
  http_code=$(echo "$response" | tail -n1)
  response_body=$(echo "$response" | head -n -1)
  
  if [ "$http_code" -eq 200 ]; then
    echo "‚úÖ Succ√®s - Code HTTP: $http_code"
    ((SUCCESS_COUNT++))
  else
    echo "‚ùå Erreur - Code HTTP: $http_code"
    echo "   R√©ponse: $response_body"
    ((ERROR_COUNT++))
  fi
  
  echo ""
done

# R√©sum√©
echo "üìä R√©sum√© des tests :"
echo "   ‚úÖ Pages r√©ussies: $SUCCESS_COUNT/$TOTAL_PAGES"
echo "   ‚ùå Pages en erreur: $ERROR_COUNT/$TOTAL_PAGES"

if [ $ERROR_COUNT -eq 0 ]; then
  echo "üéâ Toutes les pages blog fonctionnent correctement !"
  echo "‚úÖ Structure des composants valid√©e (un seul div racine)"
else
  echo "‚ö†Ô∏è  Certaines pages ont des probl√®mes √† v√©rifier"
fi

echo ""
echo "üîç V√©rifiez la console du navigateur pour les avertissements Vue :"
echo "   - Ouvrez http://localhost:3005/blog"
echo "   - Appuyez sur F12 pour ouvrir les outils d√©veloppeur"
echo "   - V√©rifiez l'onglet Console pour les avertissements" 